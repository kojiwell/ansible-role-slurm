---
# tasks file for slurm

- name: install epel-release
  dnf:
    name: epel-release
    state: present

- name: install required packages
  dnf:
    name: "{{ slurm_required_packages }}"
    state: present
    enablerepo: "{{ slurm_enabled_repos }}"

- name: download slurm-{{ slurm_version }}
  ansible.builtin.get_url:
    url: https://download.schedmd.com/slurm/slurm-{{ slurm_version }}.tar.bz2
    dest: /tmp/slurm-{{ slurm_version }}.tar.bz2
    checksum: "{{ slurm_checksum }}"

- name: unarchive slurm-{{ slurm_version }}.tar.bz2
  ansible.builtin.unarchive:
    src: /tmp/slurm-{{ slurm_version }}.tar.bz2
    dest: /tmp
    remote_src: yes

- name: install slurm-{{ slurm_version }} to {{ slurm_prefix }}
  shell: |
    ./configure --prefix={{ slurm_prefix }} {{ slurm_additional_configure_options }}
    make
    make install
  args:
    chdir: /tmp/slurm-{{ slurm_version }}
    creates: "{{ slurm_prefix }}/bin"
  when: slurm_src_install

- name: install pam_slurm_adopt
  shell: make install
  args:
    chdir: /tmp/slurm-{{ slurm_version }}/contribs/pam_slurm_adopt
    creates: /lib64/security/pam_slurm_adopt.la
  when: (slurm_install_pam_slurm_adopt) and (slurm_src_install)

- name: build rpm packages
  shell: rpmbuild -ta slurm-{{ slurm_version }}.tar.bz2
  args:
    chdir: /tmp
    creates: /root/rpmbuild/RPMS/{{ ansible_architecture }}/slurm-*
  when: slurm_rpmbuild

- name: copy rpm packages to {{ slurm_rpm_dir }}
  copy:
    remote_src: True
    src: /root/rpmbuild/RPMS/{{ ansible_architecture }}/
    dest: "{{ slurm_rpm_dir }}/"
  when: slurm_rpmbuild

- name: add /etc/yum.repo.d/slurm.repo
  template:
    src: main/etc/yum.repos.d/slurm.repo.j2
    dest: /etc/yum.repos.d/slurm.repo
    owner: root
    group: root
    mode: 0644
  when: slurm_rpmbuild